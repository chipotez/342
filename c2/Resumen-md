
===============================================================                                                             =
=                         SeccionI                            =
=          Ejercicio guiado: cokpit                           =
=                                                             =
===============================================================



===============================================================                                                             =
=                         SeccionI                            =
=          Ejercicio guiado: Monitoreo de sistemas            =
=                                                             =
===============================================================

En este trabajo de laboratorio, monitoreará el rendimiento del sistema actual e histórico a través de Performance Co-Pilot.

Recursos
Archivos	/root/cpuidle
Máquinas servera

Deberá poder mostrar los indicadores de rendimiento actuales e históricos en un sistema a través de Performance Co-Pilot.

Inicie sesión en servera como el usuario root.

En este ejercicio, instalará y configurará el software de Performance Co-Pilot en servera. 
Utilizará las utilidades proporcionadas por el software para recopilar estadísticas
de rendimiento actuales del sistema. También aprovechará la función de archivo del software y 
recuperará estadísticas de rendimiento históricas.


Instale el software Performance Co-Pilot en servera al instalar el paquete pcp.

[root@servera ~]# yum install -y pcp
Inicie y habilite el servicio pmcd para habilitar la recopilación de métricas de rendimiento.

[root@servera ~]# systemctl start pmcd
[root@servera ~]# systemctl enable pmcd
[root@servera ~]# systemctl status pmcd
[root@servera ~]# systemctl start pmlogger
[root@servera ~]# systemctl enable pmlogger
[root@servera ~]# systemctl status pmlogger

Consulte el daemon pmcd para mostrar el tiempo de inactividad por CPU para un minuto.
[root@servera ~]# pmval -T 1minute kernel.percpu.cpu.idle

Recupere la ubicación del registro de archivos en el que el proceso pmlogger principal está escribiendo.
[root@servera ~]# pcp | grep 'primary logger'
 pmlogger: primary logger: /var/log/pcp/pmlogger/servera.lab.example.com/20151211.08.28

A través del resultado del comando anterior, determine la iteración más reciente del registro de archivos al examinar los datos de fecha y hora contenidos en el nombre del archivo.
[root@servera ~]# ls -1 /var/log/pcp/pmlogger/servera.lab.example.com/20151211.08.28.[0-9]* | tail -1
/var/log/pcp/pmlogger/servera.lab.example.com/20151211.08.28.0

Use el comando pmval para obtener estadísticas históricas del tiempo de inactividad por CPU en intervalos de un minuto desde el registro de archivo más reciente. Guarde el resultado en el archivo /root/cpuidle.
[root@servera ~]# pmval -t1minute kernel.percpu.cpu.idle -a /var/log/pcp/pmlogger/servera.lab.example.com/20151211.08.28.0 > /root/cpuidle

===============================================================                                                             =
=                         SeccionII                           =
=     Ejercicio : Configuracion de Registros Remotos          =
=                                                             =
===============================================================
===============================================================
===============================================================
===============================================================


Configurará el registro de logs en un host de registro central.

Archivos	
/etc/rsyslog.conf
/etc/logrotate.d/syslog

Máquinas	
servera
serverb

Resultados
Deberá poder centralizar el registro de sistemas remotos en un host de registro central.


En servera
Configure el servicio rsyslog para que funcione como un host de registro central. 
Configure el host para aceptar la entrega de mensajes de hosts remotos a través de TCP.
Cree una nueva regla que escriba los mensajes de syslog por cada host en subdirectorios separados en /var/log/loghost. 
Los subdirectorios recibirán el nombre de host de cada host. 
Dentro del subdirectorio de cada host, se conservará un archivo de registro separado para los mensajes de cada instalación de syslog. 
Para un mejor rendimiento, configure el registro para que no se realice una sincronización después de que se registra cada mensaje. 
Configure la rotación de registros para los nuevos archivos de registro.

Configure serverb para el registro remoto del host de registro central. 
Pruebe la configuración al generar un mensaje de prueba y verificar su presencia en el registro adecuado en servera.

1 .- Verifique que el servicio rsyslog esté en ejecución y habilitado para iniciarse en el arranque.
[root@servera ~]# systemctl is-active rsyslog
[root@servera ~]# systemctl is-enabled rsyslog

2 .- Habilite la recepción de syslog TCP en /etc/rsyslog.conf al quitar los comentarios de las siguientes líneas.
$ModLoad imtcp
$InputTCPServerRun 514

3 .- En la sección "#### RULES ####", crear regla para los nombres de archivos de registro dinámicos y, luego, 
cree una regla para usar el nombre de archivo dinámico para separar los mensajes de registro por nombre de host e instalación.

$template DynamicFile,"/var/log/loghost/%HOSTNAME%/%syslogfacility-text%.log"
*.* -?DynamicFile


4 .- Reinicie el servicio rsyslog para que se apliquen los cambios de configuración.
[root@servera ~]# systemctl restart rsyslog

5 .- Agregue la siguiente entrada a la lista de archivos en el archivo de configuración /etc/logrotate.d/syslog para que 
se coloquen los nuevos archivos de registro en el programa de rotación de registros.
/var/log/loghost/*/*.log

6 .- Habilite el tráfico entrante en el puerto TCP 514.
[root@servera ~]# firewall-cmd --add-port=514/tcp --permanent
[root@servera ~]# firewall-cmd --reload

En serverb
1 .- A gregue la siguiente regla a /etc/rsyslog.conf para que todos los mensajes de syslog se entreguen de manera remota a servera a través de TCP en el puerto 514.
*.* @@servera.lab.example.com:514

2 .- Reinicie el servicio rsyslog para que se apliquen los cambios de configuración de serverb.
[root@serverb ~]# systemctl restart rsyslog

3 .- G enere un par de mensajes de syslog con diferentes instalaciones.

[root@serverb ~]# logger -p user.info "Test user.info message from serverb"
[root@serverb ~]# logger -p authpriv.crit "Test authpriv.crit message from serverb"

En servera 
1 .- Verifique que el mensaje de syslog aparezca en los archivos adecuados de /var/log/loghost/serverb.

[root@servera ~]# grep 'user\.info' /var/log/loghost/serverb/user.log
[root@servera ~]# grep 'authpriv\.crit' /var/log/loghost/serverb/authpriv.log

===============================================================                                                             =
=                         SeccionIII                          =
=     Ejercicio : Configuration management                    =
=                                                             =
===============================================================
===============================================================
===============================================================
===============================================================

En este trabajo de laboratorio, configurará un sistema para la gestión de configuraciones a través de Puppet.

Recursos
Archivos	/etc/puppet/puppet.conf
Máquinas	 servera serverb

Resultados
Deberá poder instalar y configurar Puppet en un sistema y, luego, utilizar el agente de Puppet para configurar
el servicio web en el sistema.

[student@workstation ~]$ lab puppet setup
Instale el software del agente de Puppet en serverb para implementarlo como el cliente de Puppet.

[root@serverb ~]# yum install -y puppet
Configure el agente de Puppet para señalar al Puppet maestro, servera.lab.example.com, al agregar la siguiente entrada a la sección agent del archivo de configuración /etc/puppet/puppet.conf.
server = servera.lab.example.com

Compruebe si el paquete httpd está instalado en este sistema.
[root@serverb ~]# rpm -q httpd

Habilite el servicio puppet para que el agente de Puppet se inicie en el arranque.
[root@serverb ~]# systemctl enable puppet

En la ventana de un terminal separado, utilice el comando journalctl para monitorear las nuevas entradas de registro generadas por el agente de Puppet.
[root@serverb ~]# journalctl -ef

En la ventana del terminal original, inicie el servicio puppet. El sistema se registrará con el Puppet maestro y recuperará y aplicará su configuración.
[root@serverb ~]# systemctl start puppet


Compruebe que la configuración aplicada resultó en la instalación de httpdy la habilitación y el inicio del servicio httpd.
[root@serverb ~]# rpm -q httpd
[root@serverb ~]# systemctl is-active httpd
[root@serverb ~]# systemctl is-enabled httpd

[student@workstation ~]$ lab puppet grade
[student@workstation ~]$ lab puppet reset

===============================================================                                                             =
=                         SeccionIV                           =
=     Ejercicio : seguimiento de cambios                    =
=                                                             =
===============================================================
===============================================================
===============================================================
===============================================================

Ejercicio guiado: Configuración de seguimiento de cambios	
En este trabajo de laboratorio, configurará y realizará una auditoría del sistema a través del sistema de auditoría de Linus.

Archivos:	/etc/audit/rules.d/audit.rules
Máquinas: servera serverb

Resultados
Debería poder detectar cambios en el contenido y los atributos de archivos y directorios ubicados en un sistema de archivos.

Compruebe que el daemon de auditoría esté habilitado y ejecutándose en servera.
[root@servera ~]# systemctl status auditd

Cree una regla para auditar los cambios en el contenido de los archivos y directorios ubicados en el directorio /etc. Para facilitar la identificación de registros creados por la regla, asocie los registros con la palabra clave etc_content.
[root@servera ~]# auditctl -w /etc -p w -k etc_content

Cree otra regla para auditar los cambios en los atributos de archivos y directorios ubicados en el directorio /etc. Para facilitar la identificación de registros creados por la regla, asocie los registros con la palabra clave etc_attribute.
[root@servera ~]# auditctl -w /etc -p a -k etc_attribute

Agregue las siguientes entradas al final de /etc/audit/rules.d/audit.rules para que las reglas de auditoría sean persistentes.
-w /etc -p w -k etc_content
-w /etc -p a -k etc_attribute

Copie el contenido del archivo /etc/shadow en un nuevo archivo llamado /etc/shadow.copy.
[root@servera ~]# cp /etc/shadow /etc/shadow.copy

Cambie los permisos del archivo /etc/shadow.copy para que todos lo puedan leer.
[root@servera ~]# chmod +r /etc/shadow.copy

Utilice el comando ausearch para extraer los registros de auditoría para cambios en el contenido de archivos y directorios del directorio /etc.
[root@servera ~]# ausearch -k etc_content

Utilice el comando ausearch para extraer los registros de auditoría para cambios en los atributos de archivos y directorios del directorio /etc.
[root@servera ~]# ausearch -k etc_attribute


[student@workstation ~]$ lab audit grade
[student@workstation ~]$ lab audit reset
